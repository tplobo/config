#!/bin/zsh

# TODO:Open VSCode and Terminal on the CONFIG project folder
alias config="cd $HOME//Documents/VSCODE/CONFIG/"

###############################################################################
# System                                                                      #
###############################################################################

# Show all paths
function path { tr ':' '\n' <<< "$PATH"; }

# List all users and groups
alias all_users="dscl . list /users"
alias all_groups="dscl . list /groups"

# Automatically run ls after cd
function list_all() {
  emulate -L zsh
  ls
}
if [[ ${chpwd_functions[(r)list_all]} != "list_all" ]];then
  chpwd_functions=(${chpwd_functions[@]} "list_all")
fi

# Recursevively list files in directory
alias rls="find . -exec stat -f '%N' {} +"
alias rls-la="find . -exec stat -f '%Sp%t%Su%t%Sg%t%N' {} +"

# System info for reporting issues
function sysinfo {
		    sw_vers;
		    /Volumes/Macintosh\ HD/usr/sbin/system_profiler SPHardwareDataType;
		   }

# Flush DNS Cache
function flush {
		    sudo dscacheutil -flushcache;
		    sudo killall -HUP mDNSResponder;
  		    echo 'DNS Cache successfully flushed!'
		   }

# Enable / Disable Crash Reporter (none|basic|developer|server)
function crashreporter_off {
    defaults write com.apple.CrashReporter DialogType -string "none"
}
function crashreporter_on {
    defaults write com.apple.CrashReporter DialogType -string "developer"
}

# Clean up LaunchServices to remove duplicates in the “Open With” menu
alias lscleanup="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"

# Volume control (http://xkcd.com/530/)
alias shutup="osascript -e 'set volume output muted true'"
alias shoutout="osascript -e 'set volume output volume 100'"

# Reset LaunchPad to default settings
# See: https://easyosx.net/2022/07/04/how-to-reset-mac-os-launchpad/
alias resetlaunchpad="defaults write com.apple.dock ResetLaunchPad -bool true && killall Dock"

###############################################################################
# Echo                                                                        #
###############################################################################

# Config messages
red='\033[31;1m'
green='\033[32;1m'
yellow='\033[33;1m'
reset='\033[0m'
function echo_red () { echo $red"$1"$reset; }
function echo_green () { echo $green"$1"$reset; }
function echo_yellow () { echo $yellow"$1"$reset; }

function echo_header() {
    local LEVEL="$1"
    shift
    local CHAR_UPPER
    local CHAR_LOWER
    
    case $LEVEL in
        1)
            CHAR_UPPER="#"
            CHAR_LOWER="#"
            ;;
        2)
            CHAR_UPPER="*"
            CHAR_LOWER="*"
            ;;
        3)
            CHAR_UPPER="~"
            CHAR_LOWER="~"
            ;;
        4)
            CHAR_UPPER="-"
            CHAR_LOWER="-"
            ;;
        5)
            CHAR_UPPER="_" # Unicode: U+005F
            CHAR_LOWER="¯" # Unicode: U+00AF
            ;;
        *)
            echo "Error: Unsupported header level." >&2
            return 1
            ;;
    esac
    
    local ARG_LENGTH=$(echo -n "$*" | wc -m)
    local MIN_LENGTH=80
    local LENGTH=$(( ARG_LENGTH > MIN_LENGTH ? ARG_LENGTH : MIN_LENGTH ))
    
    printf "%0.s$CHAR_UPPER" $(seq 1 $LENGTH); echo
    echo "$@"
    printf "%0.s$CHAR_LOWER" $(seq 1 $LENGTH); echo
}


###############################################################################
# Homebrew                                                                   #
###############################################################################

# Updates and cleans
function brew-up {
    brew update && brew upgrade && brew cleanup
    source $HOME/Documents/VSCODE/CONFIG/config_base.sh
    apply_launchpad
}
alias brew-clean='brew autoremove && brew cleanup'

# List all packages & casks
alias brew-main='brew leaves && echo "" && printf '%s\n' "${$(brew list --cask)[@]}"'

# Remove all packages & casks
function brew-nuke {
    brew remove --force $(brew list --formula)
	brew remove --cask --force $(brew list)
	brew-clean
}

###############################################################################
# App Store                                                                   #
###############################################################################
# (depends on `mas` & `trash` packages from Homebrew)

# Trash all apps
function mas-nuke {
	sudo -v
	# For each line, extract app path and uninstall it
	# See: https://gist.github.com/mattmc3/76ad634f362b5a9a54f1779a4737d5ae#file-split-zsh-md
	while IFS= read -r LINE; do
		APP_ID=$(echo $LINE | awk '{print $1;}');
		#sudo mas uninstall $ID; 			# fails, bug in `mas` package
		APP_DRY=$(mas uninstall $APP_ID --dry-run)
		APP_DATA=$(echo $APP_DRY | head -n1)
		APP_PATH=$(echo '/'${APP_DATA#*/})
		#APP_NAME=$(echo $APP_DATA | cut -d "/" -f 1)
		echo "Uninstalling" $APP_PATH " ..."
		sudo chown $(id -un) $APP_PATH 		# change ownership to user
		trash $APP_PATH
	done <<< "$(mas list)" # Feed list into loop
}
